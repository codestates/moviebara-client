[{"/Users/munawiki/Desktop/moviebara-client/src/index.js":"1","/Users/munawiki/Desktop/moviebara-client/src/components/App.js":"2","/Users/munawiki/Desktop/moviebara-client/src/components/Header.js":"3","/Users/munawiki/Desktop/moviebara-client/src/components/Sign.js":"4","/Users/munawiki/Desktop/moviebara-client/src/components/Mypage.js":"5","/Users/munawiki/Desktop/moviebara-client/src/components/Main.js":"6","/Users/munawiki/Desktop/moviebara-client/src/components/Post.js":"7","/Users/munawiki/Desktop/moviebara-client/src/components/SignIn.js":"8","/Users/munawiki/Desktop/moviebara-client/src/components/Signup.js":"9","/Users/munawiki/Desktop/moviebara-client/src/components/MvPosts.js":"10","/Users/munawiki/Desktop/moviebara-client/src/components/MvList.js":"11","/Users/munawiki/Desktop/moviebara-client/src/components/PostList.js":"12","/Users/munawiki/Desktop/moviebara-client/src/components/NewReview.js":"13","/Users/munawiki/Desktop/moviebara-client/src/components/MvDesc.js":"14","/Users/munawiki/Desktop/moviebara-client/src/components/Userhome.js":"15","/Users/munawiki/Desktop/moviebara-client/src/components/UpdateReviewBox.js":"16","/Users/munawiki/Desktop/moviebara-client/src/modules/validators.js":"17","/Users/munawiki/Desktop/moviebara-client/src/modules/requestLogin.js":"18"},{"size":492,"mtime":1613283509529,"results":"19","hashOfConfig":"20"},{"size":3002,"mtime":1613316388535,"results":"21","hashOfConfig":"20"},{"size":3231,"mtime":1613317829521,"results":"22","hashOfConfig":"20"},{"size":12522,"mtime":1613132358661,"results":"23","hashOfConfig":"20"},{"size":2661,"mtime":1613322015688,"results":"24","hashOfConfig":"20"},{"size":1155,"mtime":1613290666193,"results":"25","hashOfConfig":"20"},{"size":1688,"mtime":1613321198021,"results":"26","hashOfConfig":"20"},{"size":3752,"mtime":1613289335625,"results":"27","hashOfConfig":"20"},{"size":1919,"mtime":1613223985820,"results":"28","hashOfConfig":"20"},{"size":6861,"mtime":1613311891224,"results":"29","hashOfConfig":"20"},{"size":584,"mtime":1613291250831,"results":"30","hashOfConfig":"20"},{"size":3922,"mtime":1613320668388,"results":"31","hashOfConfig":"20"},{"size":1340,"mtime":1613223283783,"results":"32","hashOfConfig":"20"},{"size":387,"mtime":1613311048070,"results":"33","hashOfConfig":"20"},{"size":5520,"mtime":1613277467738,"results":"34","hashOfConfig":"20"},{"size":1968,"mtime":1613227643842,"results":"35","hashOfConfig":"20"},{"size":605,"mtime":1613140347986,"results":"36","hashOfConfig":"20"},{"size":323,"mtime":1613277035749,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"kjes75",{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"/Users/munawiki/Desktop/moviebara-client/src/index.js",[],"/Users/munawiki/Desktop/moviebara-client/src/components/App.js",["78","79","80"],"/Users/munawiki/Desktop/moviebara-client/src/components/Header.js",["81","82","83"],"/Users/munawiki/Desktop/moviebara-client/src/components/Sign.js",[],["84","85"],"/Users/munawiki/Desktop/moviebara-client/src/components/Mypage.js",["86","87","88"],"/Users/munawiki/Desktop/moviebara-client/src/components/Main.js",["89","90"],"/Users/munawiki/Desktop/moviebara-client/src/components/Post.js",["91","92","93","94"],"/Users/munawiki/Desktop/moviebara-client/src/components/SignIn.js",["95","96","97","98","99","100","101","102","103"],"/Users/munawiki/Desktop/moviebara-client/src/components/Signup.js",["104"],"import styles from \"../css/login.module.css\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function SignUp() {\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const [passwordCheck, setPasswordCheck] = useState();\n  const [nickName, setNickName] = useState();\n  const history = useHistory();\n\n  const submitSignup = () => {\n    const data = JSON.stringify({\n      nickname: nickName,\n      password: password,\n      email: email,\n    });\n\n    const config = {\n      method: \"post\",\n      url: \"https://api.moviebara.com/users/\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      data: data,\n    };\n\n    axios(config)\n      .then(function (response) {\n        alert(\"회원가입이 완료되었습니다!\");\n        history.push(\"/signin\");\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  return (\n    <div>\n      <div className={styles.inputBox}>\n        <input\n          type=\"text\"\n          placeholder=\"email\"\n          onChange={(e) => setEmail(e.target.value)}\n        ></input>\n      </div>\n      <div className={styles.inputBox}>\n        <input\n          type=\"password\"\n          placeholder=\"password\"\n          onChange={(e) => setPassword(e.target.value)}\n        ></input>\n      </div>\n      <div className={styles.inputBox}>\n        <input\n          type=\"password\"\n          placeholder=\"password check\"\n          onChange={(e) => setPasswordCheck(e.target.value)}\n        ></input>\n      </div>\n      <div className={styles.inputBox}>\n        <input\n          type=\"text\"\n          placeholder=\"nickname\"\n          onChange={(e) => setNickName(e.target.value)}\n        ></input>\n      </div>\n      <div className={styles.buttonBox}>\n        <button onClick={submitSignup}>SignUp</button>\n      </div>\n    </div>\n  );\n}\n","/Users/munawiki/Desktop/moviebara-client/src/components/MvPosts.js",["105","106","107"],"/Users/munawiki/Desktop/moviebara-client/src/components/MvList.js",[],"/Users/munawiki/Desktop/moviebara-client/src/components/PostList.js",[],"/Users/munawiki/Desktop/moviebara-client/src/components/NewReview.js",[],"/Users/munawiki/Desktop/moviebara-client/src/components/MvDesc.js",[],"/Users/munawiki/Desktop/moviebara-client/src/components/Userhome.js",["108","109"],"import { Switch, Route, useRouteMatch } from \"react-router-dom\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport styles from \"../css/userhome.module.css\";\nimport PostList from \"./PostList\";\nimport UpdateReviewBox from \"./UpdateReviewBox\";\n\nexport default function Userhome({ userInfo }) {\n  const { id, nickname, image } = userInfo;\n  const match = useRouteMatch();\n  const [posts, setPosts] = useState(null);\n  const [scraps, setScraps] = useState([]);\n  const [scraps_id, setScraps_id] = useState([]);\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const getPosts = async () => {\n    try {\n      // 요청이 시작 할 때에는 error 와 users 를 초기화하고\n      setError(null);\n      setPosts(null);\n      setScraps([]);\n      setScraps_id([]);\n      setData(null);\n\n      // loading 상태를 true 로 바꿉니다.\n\n      const response = await axios.get(\n        `https://api.moviebara.com/posts?user_id=${id}`\n      );\n      const response2 = await axios.get(\n        `https://api.moviebara.com/scraps?user_id=${id}`\n      );\n\n      setPosts(response.data.data);\n      setData(response.data.data);\n      if (!response2.data.data) {\n        setScraps([]);\n        setScraps_id([]);\n      } else {\n        setScraps(response2.data.data);\n        const scrapIds = response2.data.data.map((p) => p.postId);\n        setScraps_id(scrapIds);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  useEffect(() => {\n    getPosts();\n  }, []);\n\n  const handleDelete = (postId) => {\n    const data = JSON.stringify({ postId: postId });\n    const config = {\n      method: \"delete\",\n      url: \"https://api.moviebara.com/posts/\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      data,\n    };\n    axios(config).then((res) => {\n      axios\n        .get(`https://api.moviebara.com/posts?user_id=${id}`)\n        .then((res) => {\n          setData(res.data.data);\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    });\n  };\n\n  const handleScrap = (postId) => {\n    const data = JSON.stringify({ postId: postId, userId: id });\n    const config = {\n      method: \"post\",\n      url: \"https://api.moviebara.com/scraps/\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n\n      data,\n    };\n    axios(config).then((res) => {\n      axios\n        .get(`https://api.moviebara.com/scraps?user_id=${id}`)\n        .then((res) => {\n          if (!res.data.data) {\n            setScraps([]);\n            setScraps_id([]);\n          } else {\n            setScraps(res.data.data);\n            const scrapIds = res.data.data.map((p) => p.postId);\n            setScraps_id(scrapIds);\n          }\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    });\n  };\n  const handleUnscrap = (postId) => {\n    const data = JSON.stringify({ postId: postId, userId: id });\n    const config = {\n      method: \"delete\",\n      url: \"https://api.moviebara.com/scraps/\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n\n      data,\n    };\n    axios(config).then((res) => {\n      axios\n        .get(`https://api.moviebara.com/scraps?user_id=${id}`)\n        .then((res) => {\n          if (!res.data.data) {\n            setScraps([]);\n            setScraps_id([]);\n            setData([]);\n          } else {\n            setScraps(res.data.data);\n            const scrapIds = res.data.data.map((p) => p.postId);\n            setScraps_id(scrapIds);\n            setData(res.data.data);\n          }\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    });\n  };\n\n  if (loading) return <div>로딩중..</div>;\n  if (error) return <div>에러 발생!!{error}</div>;\n  // if (!posts || !scraps) return null;\n  return (\n    <div className={styles.container}>\n      <div className={styles.userInfoBox}>\n        <div className={styles.img_box}>\n          <img className={styles.img} src={image} alt=\"사용자 프로필 사진\" />\n          <div>{nickname}</div>\n        </div>\n        <div className={styles.line}></div>\n        <div className={styles.info_box}>\n          내가 쓴 리뷰 : {!posts ? 0 : posts.length} 스크랩 :\n          {!scraps ? 0 : scraps.length}\n        </div>\n      </div>\n      <div className={styles.links_Box}>\n        <div className={styles.myReview_link}>\n          <div\n            className={styles.btn}\n            onClick={() => {\n              setData(posts);\n            }}\n          >\n            내가 쓴 리뷰\n          </div>\n        </div>\n        <div className={styles.part}></div>\n        <div className={styles.myScrap_link}>\n          <div\n            className={styles.btn}\n            onClick={() => {\n              setData(scraps);\n            }}\n          >\n            스크랩\n          </div>\n        </div>\n      </div>\n\n      <Switch>\n        <Route exact path={match.path}>\n          <div className={styles.posts_box}>\n            <PostList\n              posts={data}\n              userInfo={userInfo}\n              scraps_id={scraps_id}\n              deleteHandler={handleDelete}\n              scrapHandler={handleScrap}\n              unscrapHandler={handleUnscrap}\n            />\n          </div>\n        </Route>\n        <Route path={`${match.path}/:postId`}>\n          <UpdateReviewBox userInfo={userInfo} setPosts={setData} />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n","/Users/munawiki/Desktop/moviebara-client/src/components/UpdateReviewBox.js",["110","111"],"import styles from \"../css/updatereviewbox.module.css\";\n\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory, useParams, useRouteMatch } from \"react-router-dom\";\nimport axios from \"axios\";\n\nexport default function UpdateReviewBox({ userInfo, setPosts }) {\n  const { postId } = useParams();\n  const [text, setText] = useState(\"\");\n  const [movieId, setMovieId] = useState(\"\");\n  const history = useHistory();\n  const match = useRouteMatch();\n  useEffect(() => {\n    const getMovieId = async () => {\n      await axios\n        .get(`https://api.moviebara.com/posts?user_id=${userInfo.id}`)\n        .then((res) => {\n          const post = res.data.data.filter((p) => p.id === Number(postId))[0];\n\n          const movieTitle = post.movie.title;\n          axios\n            .get(`https://api.moviebara.com/movies?movie_title=${movieTitle}`)\n            .then((res) => setMovieId(res.data.data.id));\n        });\n    };\n    getMovieId();\n  }, []);\n\n  const handleSubmit = () => {\n    const data = JSON.stringify({\n      userId: userInfo.id,\n      movieId: Number(movieId),\n      postId,\n      rate: 8.3,\n      text,\n    });\n\n    const config = {\n      method: \"patch\",\n      url: \"https://api.moviebara.com/posts/\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      data,\n    };\n\n    axios(config).then((res) => {\n      axios\n        .get(`https://api.moviebara.com/posts?movie_id=${movieId}`)\n        .then((res) => {\n          setPosts(res.data.data);\n          history.push(`/main/${movieId}`);\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    });\n  };\n  return (\n    <div className={styles.contatiner}>\n      <div className={styles.text_box}>\n        <textarea\n          onChange={(e) => {\n            setText(e.target.value);\n          }}\n        />\n      </div>\n      <button className={styles.submit} onClick={handleSubmit}>\n        리뷰 수정\n      </button>\n    </div>\n  );\n}\n","/Users/munawiki/Desktop/moviebara-client/src/modules/validators.js",[],"/Users/munawiki/Desktop/moviebara-client/src/modules/requestLogin.js",[],{"ruleId":"112","severity":1,"message":"113","line":9,"column":17,"nodeType":"114","messageId":"115","endLine":9,"endColumn":26},{"ruleId":"112","severity":1,"message":"116","line":77,"column":10,"nodeType":"114","messageId":"115","endLine":77,"endColumn":14},{"ruleId":"112","severity":1,"message":"117","line":81,"column":10,"nodeType":"114","messageId":"115","endLine":81,"endColumn":15},{"ruleId":"112","severity":1,"message":"113","line":1,"column":17,"nodeType":"114","messageId":"115","endLine":1,"endColumn":26},{"ruleId":"112","severity":1,"message":"118","line":14,"column":7,"nodeType":"114","messageId":"115","endLine":14,"endColumn":12},{"ruleId":"119","severity":1,"message":"120","line":73,"column":9,"nodeType":"121","endLine":73,"endColumn":68},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"112","severity":1,"message":"126","line":13,"column":10,"nodeType":"114","messageId":"115","endLine":13,"endColumn":23},{"ruleId":"127","severity":1,"message":"128","line":20,"column":6,"nodeType":"129","endLine":20,"endColumn":8,"suggestions":"130"},{"ruleId":"131","severity":1,"message":"132","line":62,"column":9,"nodeType":"121","endLine":62,"endColumn":68},{"ruleId":"112","severity":1,"message":"133","line":7,"column":8,"nodeType":"114","messageId":"115","endLine":7,"endColumn":20},{"ruleId":"112","severity":1,"message":"134","line":12,"column":9,"nodeType":"114","messageId":"115","endLine":12,"endColumn":16},{"ruleId":"112","severity":1,"message":"135","line":2,"column":8,"nodeType":"114","messageId":"115","endLine":2,"endColumn":14},{"ruleId":"112","severity":1,"message":"136","line":3,"column":8,"nodeType":"114","messageId":"115","endLine":3,"endColumn":18},{"ruleId":"131","severity":1,"message":"132","line":12,"column":11,"nodeType":"121","endLine":12,"endColumn":70},{"ruleId":"131","severity":1,"message":"132","line":19,"column":11,"nodeType":"121","endLine":19,"endColumn":69},{"ruleId":"112","severity":1,"message":"137","line":5,"column":10,"nodeType":"114","messageId":"115","endLine":5,"endColumn":24},{"ruleId":"112","severity":1,"message":"138","line":5,"column":26,"nodeType":"114","messageId":"115","endLine":5,"endColumn":43},{"ruleId":"112","severity":1,"message":"139","line":7,"column":10,"nodeType":"114","messageId":"115","endLine":7,"endColumn":16},{"ruleId":"112","severity":1,"message":"140","line":7,"column":18,"nodeType":"114","messageId":"115","endLine":7,"endColumn":22},{"ruleId":"112","severity":1,"message":"141","line":7,"column":24,"nodeType":"114","messageId":"115","endLine":7,"endColumn":33},{"ruleId":"112","severity":1,"message":"142","line":7,"column":35,"nodeType":"114","messageId":"115","endLine":7,"endColumn":40},{"ruleId":"112","severity":1,"message":"143","line":7,"column":42,"nodeType":"114","messageId":"115","endLine":7,"endColumn":47},{"ruleId":"112","severity":1,"message":"144","line":7,"column":49,"nodeType":"114","messageId":"115","endLine":7,"endColumn":57},{"ruleId":"112","severity":1,"message":"145","line":13,"column":20,"nodeType":"114","messageId":"115","endLine":13,"endColumn":31},{"ruleId":"112","severity":1,"message":"126","line":9,"column":10,"nodeType":"114","messageId":"115","endLine":9,"endColumn":23},{"ruleId":"112","severity":1,"message":"146","line":23,"column":10,"nodeType":"114","messageId":"115","endLine":23,"endColumn":16},{"ruleId":"127","severity":1,"message":"147","line":32,"column":6,"nodeType":"129","endLine":32,"endColumn":8,"suggestions":"148"},{"ruleId":"149","severity":1,"message":"150","line":232,"column":19,"nodeType":"151","endLine":232,"endColumn":47},{"ruleId":"112","severity":1,"message":"152","line":15,"column":19,"nodeType":"114","messageId":"115","endLine":15,"endColumn":29},{"ruleId":"127","severity":1,"message":"153","line":53,"column":6,"nodeType":"129","endLine":53,"endColumn":8,"suggestions":"154"},{"ruleId":"112","severity":1,"message":"118","line":12,"column":9,"nodeType":"114","messageId":"115","endLine":12,"endColumn":14},{"ruleId":"127","severity":1,"message":"155","line":27,"column":6,"nodeType":"129","endLine":27,"endColumn":8,"suggestions":"156"},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Home' is defined but never used.","'About' is defined but never used.","'match' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-native-reassign",["157"],"no-negated-in-lhs",["158"],"'passwordCheck' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history', 'props.setIsLogin', and 'props.setUserInfo'. Either include them or remove the dependency array.","ArrayExpression",["159"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'requestLogin' is defined but never used.","'history' is assigned a value but never used.","'movies' is defined but never used.","'dummyImage' is defined but never used.","'emailValidator' is defined but never used.","'passwordValidator' is defined but never used.","'Button' is defined but never used.","'Form' is defined but never used.","'FormGroup' is defined but never used.","'Label' is defined but never used.","'Input' is defined but never used.","'FormText' is defined but never used.","'setWarnings' is assigned a value but never used.","'scraps' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getData', 'getDataTitle', and 'movieId'. Either include them or remove the dependency array.",["160"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'setLoading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getPosts'. Either include it or remove the dependency array.",["161"],"React Hook useEffect has missing dependencies: 'postId' and 'userInfo.id'. Either include them or remove the dependency array.",["162"],"no-global-assign","no-unsafe-negation",{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},"Update the dependencies array to be: [history, props.setIsLogin, props.setUserInfo]",{"range":"171","text":"172"},"Update the dependencies array to be: [getData, getDataTitle, movieId]",{"range":"173","text":"174"},"Update the dependencies array to be: [getPosts]",{"range":"175","text":"176"},"Update the dependencies array to be: [postId, userInfo.id]",{"range":"177","text":"178"},[796,798],"[history, props.setIsLogin, props.setUserInfo]",[850,852],"[getData, getDataTitle, movieId]",[1533,1535],"[getPosts]",[955,957],"[postId, userInfo.id]"]