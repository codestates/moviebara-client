[{"/Users/munawiki/Desktop/moviebara-client/src/index.js":"1","/Users/munawiki/Desktop/moviebara-client/src/components/App.js":"2","/Users/munawiki/Desktop/moviebara-client/src/components/Header.js":"3","/Users/munawiki/Desktop/moviebara-client/src/components/Sign.js":"4","/Users/munawiki/Desktop/moviebara-client/src/components/Mypage.js":"5","/Users/munawiki/Desktop/moviebara-client/src/components/Main.js":"6","/Users/munawiki/Desktop/moviebara-client/src/components/Post.js":"7","/Users/munawiki/Desktop/moviebara-client/src/components/SignIn.js":"8","/Users/munawiki/Desktop/moviebara-client/src/components/Signup.js":"9","/Users/munawiki/Desktop/moviebara-client/src/components/MvPosts.js":"10","/Users/munawiki/Desktop/moviebara-client/src/components/MvList.js":"11","/Users/munawiki/Desktop/moviebara-client/src/components/PostList.js":"12","/Users/munawiki/Desktop/moviebara-client/src/components/NewReview.js":"13","/Users/munawiki/Desktop/moviebara-client/src/components/MvDesc.js":"14","/Users/munawiki/Desktop/moviebara-client/src/components/Userhome.js":"15","/Users/munawiki/Desktop/moviebara-client/src/components/UpdateReviewBox.js":"16","/Users/munawiki/Desktop/moviebara-client/src/modules/validators.js":"17","/Users/munawiki/Desktop/moviebara-client/src/modules/requestLogin.js":"18"},{"size":492,"mtime":1613283509529,"results":"19","hashOfConfig":"20"},{"size":3002,"mtime":1613316388535,"results":"21","hashOfConfig":"20"},{"size":3078,"mtime":1613325248075,"results":"22","hashOfConfig":"20"},{"size":12815,"mtime":1613325930184,"results":"23","hashOfConfig":"20"},{"size":2661,"mtime":1613322015688,"results":"24","hashOfConfig":"20"},{"size":1155,"mtime":1613290666193,"results":"25","hashOfConfig":"20"},{"size":1688,"mtime":1613321198021,"results":"26","hashOfConfig":"20"},{"size":3277,"mtime":1613326053993,"results":"27","hashOfConfig":"20"},{"size":2840,"mtime":1613326164787,"results":"28","hashOfConfig":"20"},{"size":6861,"mtime":1613311891224,"results":"29","hashOfConfig":"20"},{"size":584,"mtime":1613291250831,"results":"30","hashOfConfig":"20"},{"size":3922,"mtime":1613320668388,"results":"31","hashOfConfig":"20"},{"size":1340,"mtime":1613223283783,"results":"32","hashOfConfig":"20"},{"size":387,"mtime":1613311048070,"results":"33","hashOfConfig":"20"},{"size":5520,"mtime":1613324811414,"results":"34","hashOfConfig":"20"},{"size":2020,"mtime":1613323369087,"results":"35","hashOfConfig":"20"},{"size":605,"mtime":1613140347986,"results":"36","hashOfConfig":"20"},{"size":323,"mtime":1613277035749,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"kjes75",{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"/Users/munawiki/Desktop/moviebara-client/src/index.js",[],["80","81"],"/Users/munawiki/Desktop/moviebara-client/src/components/App.js",["82","83","84"],"import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useRouteMatch,\n  useParams,\n} from \"react-router-dom\";\nimport React, { useEffect, useState } from \"react\";\nimport Sign from \"./Sign.js\";\nimport styles from \"../css/app.module.css\";\nimport Header from \"./Header.js\";\nimport Main from \"./Main.js\";\nimport MyPage from \"./Mypage.js\";\nimport Post from \"./Post.js\";\nimport Userhome from \"./Userhome\";\nexport default function App() {\n  const [isLogin, setIsLogin] = useState();\n  const [userInfo, setUserInfo] = useState(null);\n\n  return (\n    <Router>\n      <div className={styles.container}>\n        <nav className={styles.nav}>\n          <Header\n            isLogin={isLogin}\n            userInfo={userInfo}\n            setIsLogin={setIsLogin}\n            setUserInfo={setUserInfo}\n          />\n        </nav>\n        <div className={styles.pages}>\n          <Switch>\n            <Route path=\"/mypage\">\n              <MyPage\n                userInfo={userInfo}\n                isLogin={isLogin}\n                setIsLogin={setIsLogin}\n                setUserInfo={setUserInfo}\n              />\n            </Route>\n            <Route path=\"/userhome\">\n              <Userhome\n                userInfo={userInfo}\n                isLogin={isLogin}\n                setUserInfo={setUserInfo}\n              />\n            </Route>\n            <Route path=\"/topics\">\n              <Topics />\n            </Route>\n            <Route path=\"/main\">\n              <Main\n                userInfo={userInfo}\n                isLogin={isLogin}\n                setIsLogin={setIsLogin}\n                setUserInfo={setUserInfo}\n              />\n            </Route>\n            <Route path=\"/post\">\n              <Post />\n            </Route>\n            <Route path=\"/\">\n              <Sign\n                isLogin={isLogin}\n                setIsLogin={setIsLogin}\n                setUserInfo={setUserInfo}\n              />\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nfunction Home() {\n  return <h2>Home</h2>;\n}\n\nfunction About() {\n  return <h2>About</h2>;\n}\n\nfunction Topics() {\n  let match = useRouteMatch();\n\n  return (\n    <div>\n      <h2>Topics</h2>\n      <ul>\n        <li>\n          <Link to={`${match.url}/components`}>Components</Link>\n        </li>\n        <li>\n          <Link to={`${match.url}/props-v-state`}>Props v. State</Link>\n        </li>\n      </ul>\n\n      {/* The Topics page has its own <Switch> with more routes\n          that build on the /topics URL path. You can think of the\n          2nd <Route> here as an \"index\" page for all topics, or\n          the page that is shown when no topic is selected */}\n      <Switch>\n        <Route path={`${match.path}/:topicId`}>\n          <Topic />\n        </Route>\n        <Route path={match.path}>\n          <h3>Please select a topic.</h3>\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nfunction Topic() {\n  let { topicId } = useParams();\n  return <h3>Requested topic ID: {topicId}</h3>;\n}\n","/Users/munawiki/Desktop/moviebara-client/src/components/Header.js",["85","86","87"],"/Users/munawiki/Desktop/moviebara-client/src/components/Sign.js",[],"/Users/munawiki/Desktop/moviebara-client/src/components/Mypage.js",["88","89","90"],"import styles from \"../css/mypage.module.css\";\nimport movies from \"../dummy/movies.json\";\nimport React, { useState, useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCamera } from \"@fortawesome/free-solid-svg-icons\";\nimport axios from \"axios\";\nimport requestLogin from \"../modules/requestLogin\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function MyPage(props) {\n  const [nickname, setNickname] = useState();\n  const [password, setPassword] = useState();\n  const [passwordCheck, setPasswordCheck] = useState();\n  const history = useHistory();\n  const [image, setImage] = useState(movies.movies[0].image);\n\n  useEffect(() => {\n    // console.log(props);\n    requestLogin(props.setIsLogin, props.setUserInfo, history);\n  }, []);\n\n  const submitModified = () => {\n    const formData = new FormData();\n\n    formData.append(\"image\", image);\n    formData.append(\"nickname\", nickname);\n    formData.append(\"password\", password);\n\n    const config = {\n      method: \"patch\",\n      url: \"https://api.moviebara.com/users/\",\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n      },\n      data: formData,\n    };\n\n    axios(config)\n      .then((response) => {\n        console.log(response.data);\n        axios.get(\"https://api.moviebara.com/users/\").then((res) => {\n          props.setUserInfo(res.data.data);\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const fileInput = React.createRef();\n\n  const imageChangeHandler = () => {\n    setImage(fileInput.current.files[0]);\n  };\n\n  return (\n    <div className={styles.box}>\n      <label htmlFor=\"fileUploader\" className={styles.profileLabel}>\n        <div className={styles.profileFilter}>\n          <FontAwesomeIcon icon={faCamera} size=\"3x\" />\n        </div>\n        <img src={props.userInfo.image} className={styles.profile}></img>\n      </label>\n      <div className={styles.email}>{props.userInfo.email}</div>\n      <input\n        type=\"file\"\n        onChange={imageChangeHandler}\n        ref={fileInput}\n        className={styles.fileUploader}\n        id=\"fileUploader\"\n      ></input>\n      <input\n        type=\"text\"\n        placeholder=\"nickname\"\n        onChange={(e) => setNickname(e.target.value)}\n      ></input>\n      <input\n        type=\"password\"\n        placeholder=\"password\"\n        onChange={(e) => setPassword(e.target.value)}\n      ></input>\n      <input\n        type=\"password\"\n        placeholder=\"password check\"\n        onChange={(e) => setPasswordCheck(e.target.value)}\n      ></input>\n      <button onClick={submitModified}>Modified</button>\n    </div>\n  );\n}\n","/Users/munawiki/Desktop/moviebara-client/src/components/Main.js",["91","92"],"import MvPosts from \"./MvPosts.js\";\nimport MvList from \"./MvList.js\";\nimport styles from \"../css/main.module.css\";\nimport { Route, useRouteMatch } from \"react-router\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport requestLogin from \"../modules/requestLogin\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction Main({ userInfo, setIsLogin, setUserInfo }) {\n  const match = useRouteMatch();\n  const history = useHistory();\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    // requestLogin(setIsLogin, setUserInfo, history);\n    getMovies();\n  }, []);\n\n  const getMovies = () => {\n    axios.get(\"https://api.moviebara.com/movies/\").then((res) => {\n      console.log(res.data.data);\n      setMovies(res.data.data);\n    });\n  };\n  return (\n    <>\n      <Route exact path={match.path}>\n        <div className={styles.container}>\n          <MvList movies={movies} />\n        </div>\n      </Route>\n      <Route path={`${match.path}/:movieId`}>\n        <div className={styles.mvPosts_box}>\n          <MvPosts userInfo={userInfo} />\n        </div>\n      </Route>\n    </>\n  );\n}\n\nexport default Main;\n","/Users/munawiki/Desktop/moviebara-client/src/components/Post.js",["93","94","95","96"],"import styles from \"../css/post.module.css\";\nimport movies from \"../dummy/movies.json\";\nimport dummyImage from \"../dummy/images/1.jpg\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHeart } from \"@fortawesome/free-solid-svg-icons\";\n\nexport default function Post({ post }) {\n  return (\n    <div className={styles.box}>\n      <div className={styles.top}>\n        <div className={styles.profilePhotoBox}>\n          <img className={styles.profilePhoto} src={post.user.image}></img>\n        </div>\n        <div className={styles.nickName}>{post.user.nickname}</div>\n        {/* <div className={styles.date}>{\"2020-02-20\"}</div> */}\n      </div>\n      <div className={styles.bottom}>\n        <div className={styles.bottomLeft}>\n          <img src={post.movie.image} className={styles.movieImage}></img>\n        </div>\n        <div className={styles.bottomRight}>\n          <div className={styles.movieTitle}>\n            <div>{post.movie.title}</div>\n            <div>{post.createdAt.slice(0, 10)}</div>\n          </div>\n          <div className={styles.movieReviewBox}>\n            <div className={styles.movieReview}>{post.text}</div>\n          </div>\n          <div className={styles.movieUtil}>\n            <div className={styles.awesome}>\n              <FontAwesomeIcon icon={faHeart} />\n            </div>\n            {/* <div className={styles.tagBox}>\n              <div>tag1</div>\n              <div>tag2</div>\n              <div>tag3</div>\n            </div> */}\n            <div className={styles.scrap}>스크랩 {post.scrap}</div>\n            <div className={styles.report}>신고</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/munawiki/Desktop/moviebara-client/src/components/SignIn.js",["97","98","99","100","101","102","103","104","105"],"/Users/munawiki/Desktop/moviebara-client/src/components/Signup.js",["106"],"/Users/munawiki/Desktop/moviebara-client/src/components/MvPosts.js",["107","108","109"],"import {\n  useParams,\n  Switch,\n  Route,\n  Link,\n  useRouteMatch,\n} from \"react-router-dom\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport PostList from \"./PostList.js\";\nimport NewReview from \"./NewReview.js\";\nimport UpdateReviewBox from \"./UpdateReviewBox.js\";\nimport styles from \"../css/mvposts.module.css\";\n\nexport default function MvPosts({ userInfo }) {\n  const { id } = userInfo;\n  const { movieId } = useParams();\n  const match = useRouteMatch();\n\n  const [posts, setPosts] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [mvInfo, setMvInfo] = useState(null);\n  const [scraps, setScraps] = useState(null);\n  const [scraps_id, setScraps_id] = useState(null);\n\n  useEffect(() => {\n    if (isNaN(Number(movieId))) {\n      getDataTitle();\n    } else {\n      getData();\n    }\n  }, []);\n\n  const getData = async () => {\n    try {\n      setPosts(null);\n      setMvInfo(null);\n      setLoading(true);\n      setScraps([]);\n      setScraps_id([]);\n      await axios\n        .get(`https://api.moviebara.com/posts?movie_id=${movieId}`)\n        .then((res) => {\n          setPosts(res.data.data);\n        });\n      await axios\n        .get(`https://api.moviebara.com/movies?movie_id=${movieId}`)\n        .then((res) => {\n          setMvInfo(res.data.data);\n        });\n      await axios\n        .get(`https://api.moviebara.com/scraps?user_id=${id}`)\n        .then((res) => {\n          if (!res.data.data) {\n            setScraps([]);\n            setScraps_id([]);\n          } else {\n            setScraps(res.data.data);\n            const scrapIds = res.data.data.map((p) => p.postId);\n            setScraps_id(scrapIds);\n          }\n        });\n    } catch (e) {\n      console.log(e);\n    }\n    setLoading(false);\n  };\n\n  const getDataTitle = async () => {\n    try {\n      setPosts(null);\n      setMvInfo(null);\n      setLoading(true);\n      setScraps([]);\n      setScraps_id([]);\n      await axios\n        .get(`https://api.moviebara.com/movies?movie_title=${movieId}`)\n        .then((res) => {\n          setMvInfo(res.data.data);\n\n          axios\n            .get(`https://api.moviebara.com/posts?movie_id=${res.data.data.id}`)\n            .then((res2) => {\n              setPosts(res2.data.data);\n            });\n        });\n\n      await axios\n        .get(`https://api.moviebara.com/scraps?user_id=${id}`)\n        .then((res) => {\n          if (!res.data.data) {\n            setScraps([]);\n            setScraps_id([]);\n          } else {\n            setScraps(res.data.data);\n            const scrapIds = res.data.data.map((p) => p.postId);\n            setScraps_id(scrapIds);\n          }\n        });\n    } catch (e) {\n      console.log(e);\n    }\n    setLoading(false);\n  };\n\n  const handleDelete = (postId) => {\n    const data = JSON.stringify({ postId: postId });\n    const config = {\n      method: \"delete\",\n      url: \"https://api.moviebara.com/posts/\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n\n      data,\n    };\n    axios(config).then((res) => {\n      axios\n        .get(`https://api.moviebara.com/posts?movie_id=${movieId}`)\n        .then((res) => {\n          setPosts(res.data.data);\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    });\n  };\n\n  const handleScrap = (postId) => {\n    const data = JSON.stringify({ postId: postId, userId: id });\n    const config = {\n      method: \"post\",\n      url: \"https://api.moviebara.com/scraps/\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n\n      data,\n    };\n    axios(config).then((res) => {\n      axios\n        .get(`https://api.moviebara.com/scraps?user_id=${id}`)\n        .then((res) => {\n          if (!res.data.data) {\n            setScraps([]);\n            setScraps_id([]);\n          } else {\n            setScraps(res.data.data);\n            const scrapIds = res.data.data.map((p) => p.postId);\n            setScraps_id(scrapIds);\n          }\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    });\n  };\n\n  const handleUnscrap = (postId) => {\n    const data = JSON.stringify({ postId: postId, userId: id });\n    const config = {\n      method: \"delete\",\n      url: \"https://api.moviebara.com/scraps/\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n\n      data,\n    };\n    axios(config).then((res) => {\n      axios\n        .get(`https://api.moviebara.com/scraps?user_id=${id}`)\n        .then((res) => {\n          if (!res.data.data) {\n            setScraps([]);\n            setScraps_id([]);\n          } else {\n            setScraps(res.data.data);\n            const scrapIds = res.data.data.map((p) => p.postId);\n            setScraps_id(scrapIds);\n          }\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    });\n  };\n\n  if (loading) return <div>로딩중</div>;\n  if (mvInfo === null && posts === null) {\n    return <div className={styles.container}></div>;\n  } else {\n    return (\n      <div className={styles.container}>\n        <div className={styles.mvInfo_box}>\n          <div className={styles.mvPoster}>\n            <img\n              src={mvInfo.image}\n              alt=\"영화 포스터\"\n              className={styles.posterImg}\n            />\n          </div>\n          <div className={styles.mvInfo}>\n            <p>\n              <span className={styles.mvInfoTitle}>{mvInfo.title}</span>\n              <span>{\"  \" + mvInfo.year}</span>\n            </p>\n\n            <p>장르 : {mvInfo.genre}</p>\n            <p>줄거리 : {mvInfo.summary}</p>\n          </div>\n        </div>\n        <div className={styles.posts_box}>\n          <Switch>\n            <Route exact path={match.path}>\n              <div className={styles.newReview_btn_box}>\n                <div className={styles.newReview_btn}>\n                  <Link\n                    className={styles.create_link}\n                    to={`${match.url}/create`}\n                  >\n                    리뷰 작성\n                  </Link>\n                </div>\n              </div>\n              <div className={styles.posts}>\n                <PostList\n                  posts={posts}\n                  userInfo={userInfo}\n                  deleteHandler={handleDelete}\n                  scraps_id={scraps_id}\n                  deleteHandler={handleDelete}\n                  scrapHandler={handleScrap}\n                  unscrapHandler={handleUnscrap}\n                />\n              </div>\n            </Route>\n            <Route path={`${match.path}/create`}>\n              <NewReview userInfo={userInfo} setPosts={setPosts} />\n            </Route>\n            <Route path={`${match.path}/:postId`}>\n              <UpdateReviewBox userInfo={userInfo} setPosts={setPosts} />\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n","/Users/munawiki/Desktop/moviebara-client/src/components/MvList.js",[],"/Users/munawiki/Desktop/moviebara-client/src/components/PostList.js",[],"/Users/munawiki/Desktop/moviebara-client/src/components/NewReview.js",[],"/Users/munawiki/Desktop/moviebara-client/src/components/MvDesc.js",[],"/Users/munawiki/Desktop/moviebara-client/src/components/Userhome.js",["110","111"],"/Users/munawiki/Desktop/moviebara-client/src/components/UpdateReviewBox.js",["112","113"],"/Users/munawiki/Desktop/moviebara-client/src/modules/validators.js",[],"/Users/munawiki/Desktop/moviebara-client/src/modules/requestLogin.js",[],{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":9,"column":17,"nodeType":"120","messageId":"121","endLine":9,"endColumn":26},{"ruleId":"118","severity":1,"message":"122","line":77,"column":10,"nodeType":"120","messageId":"121","endLine":77,"endColumn":14},{"ruleId":"118","severity":1,"message":"123","line":81,"column":10,"nodeType":"120","messageId":"121","endLine":81,"endColumn":15},{"ruleId":"118","severity":1,"message":"119","line":1,"column":17,"nodeType":"120","messageId":"121","endLine":1,"endColumn":26},{"ruleId":"118","severity":1,"message":"124","line":14,"column":7,"nodeType":"120","messageId":"121","endLine":14,"endColumn":12},{"ruleId":"125","severity":1,"message":"126","line":73,"column":9,"nodeType":"127","endLine":73,"endColumn":68},{"ruleId":"118","severity":1,"message":"128","line":13,"column":10,"nodeType":"120","messageId":"121","endLine":13,"endColumn":23},{"ruleId":"129","severity":1,"message":"130","line":20,"column":6,"nodeType":"131","endLine":20,"endColumn":8,"suggestions":"132"},{"ruleId":"133","severity":1,"message":"134","line":62,"column":9,"nodeType":"127","endLine":62,"endColumn":68},{"ruleId":"118","severity":1,"message":"135","line":7,"column":8,"nodeType":"120","messageId":"121","endLine":7,"endColumn":20},{"ruleId":"118","severity":1,"message":"136","line":12,"column":9,"nodeType":"120","messageId":"121","endLine":12,"endColumn":16},{"ruleId":"118","severity":1,"message":"137","line":2,"column":8,"nodeType":"120","messageId":"121","endLine":2,"endColumn":14},{"ruleId":"118","severity":1,"message":"138","line":3,"column":8,"nodeType":"120","messageId":"121","endLine":3,"endColumn":18},{"ruleId":"133","severity":1,"message":"134","line":12,"column":11,"nodeType":"127","endLine":12,"endColumn":70},{"ruleId":"133","severity":1,"message":"134","line":19,"column":11,"nodeType":"127","endLine":19,"endColumn":69},{"ruleId":"118","severity":1,"message":"139","line":5,"column":10,"nodeType":"120","messageId":"121","endLine":5,"endColumn":24},{"ruleId":"118","severity":1,"message":"140","line":5,"column":26,"nodeType":"120","messageId":"121","endLine":5,"endColumn":43},{"ruleId":"118","severity":1,"message":"141","line":7,"column":10,"nodeType":"120","messageId":"121","endLine":7,"endColumn":16},{"ruleId":"118","severity":1,"message":"142","line":7,"column":18,"nodeType":"120","messageId":"121","endLine":7,"endColumn":22},{"ruleId":"118","severity":1,"message":"143","line":7,"column":24,"nodeType":"120","messageId":"121","endLine":7,"endColumn":33},{"ruleId":"118","severity":1,"message":"144","line":7,"column":35,"nodeType":"120","messageId":"121","endLine":7,"endColumn":40},{"ruleId":"118","severity":1,"message":"145","line":7,"column":42,"nodeType":"120","messageId":"121","endLine":7,"endColumn":47},{"ruleId":"118","severity":1,"message":"146","line":7,"column":49,"nodeType":"120","messageId":"121","endLine":7,"endColumn":57},{"ruleId":"118","severity":1,"message":"147","line":13,"column":20,"nodeType":"120","messageId":"121","endLine":13,"endColumn":31},{"ruleId":"118","severity":1,"message":"128","line":10,"column":10,"nodeType":"120","messageId":"121","endLine":10,"endColumn":23},{"ruleId":"118","severity":1,"message":"148","line":23,"column":10,"nodeType":"120","messageId":"121","endLine":23,"endColumn":16},{"ruleId":"129","severity":1,"message":"149","line":32,"column":6,"nodeType":"131","endLine":32,"endColumn":8,"suggestions":"150"},{"ruleId":"151","severity":1,"message":"152","line":232,"column":19,"nodeType":"153","endLine":232,"endColumn":47},{"ruleId":"118","severity":1,"message":"154","line":15,"column":19,"nodeType":"120","messageId":"121","endLine":15,"endColumn":29},{"ruleId":"129","severity":1,"message":"155","line":53,"column":6,"nodeType":"131","endLine":53,"endColumn":8,"suggestions":"156"},{"ruleId":"118","severity":1,"message":"124","line":12,"column":9,"nodeType":"120","messageId":"121","endLine":12,"endColumn":14},{"ruleId":"129","severity":1,"message":"157","line":27,"column":6,"nodeType":"131","endLine":27,"endColumn":8,"suggestions":"158"},"no-native-reassign",["159"],"no-negated-in-lhs",["160"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Home' is defined but never used.","'About' is defined but never used.","'match' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'passwordCheck' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history', 'props.setIsLogin', and 'props.setUserInfo'. Either include them or remove the dependency array.","ArrayExpression",["161"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'requestLogin' is defined but never used.","'history' is assigned a value but never used.","'movies' is defined but never used.","'dummyImage' is defined but never used.","'emailValidator' is defined but never used.","'passwordValidator' is defined but never used.","'Button' is defined but never used.","'Form' is defined but never used.","'FormGroup' is defined but never used.","'Label' is defined but never used.","'Input' is defined but never used.","'FormText' is defined but never used.","'setWarnings' is assigned a value but never used.","'scraps' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getData', 'getDataTitle', and 'movieId'. Either include them or remove the dependency array.",["162"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'setLoading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getPosts'. Either include it or remove the dependency array.",["163"],"React Hook useEffect has missing dependencies: 'postId' and 'userInfo.id'. Either include them or remove the dependency array.",["164"],"no-global-assign","no-unsafe-negation",{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},"Update the dependencies array to be: [history, props.setIsLogin, props.setUserInfo]",{"range":"173","text":"174"},"Update the dependencies array to be: [getData, getDataTitle, movieId]",{"range":"175","text":"176"},"Update the dependencies array to be: [getPosts]",{"range":"177","text":"178"},"Update the dependencies array to be: [postId, userInfo.id]",{"range":"179","text":"180"},[796,798],"[history, props.setIsLogin, props.setUserInfo]",[850,852],"[getData, getDataTitle, movieId]",[1533,1535],"[getPosts]",[984,986],"[postId, userInfo.id]"]